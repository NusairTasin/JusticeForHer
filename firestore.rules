rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Enhanced user data protection
    match /users/{userId} {
      allow read, write: if request.auth != null 
        && request.auth.uid == userId
        && (resource == null || isValidUserData(request.resource.data));
    }
    
    // Danger alerts with proper validation
    match /danger_alerts/{alertId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null 
        && isValidAlert(request.resource.data)
        && request.resource.data.userId == request.auth.uid;
      allow update, delete: if false; // Alerts should be immutable
    }
    
    // FCM tokens for notifications
    match /fcm_tokens/{token} {
      allow read, write: if request.auth != null;
    }
    
    function isValidUserData(data) {
      return data != null &&
             data.keys().hasAll(['firstName', 'lastName', 'email', 'phoneNumber']) &&
             data.firstName is string && data.firstName.size() > 0 &&
             data.lastName is string && data.lastName.size() > 0 &&
             data.email is string && data.email.matches('.*@.*\\..*') &&
             data.phoneNumber is string && data.phoneNumber.size() > 0;
    }
    
    function isValidAlert(data) {
      return data != null &&
             data.keys().hasAll(['userId', 'latitude', 'longitude', 'timestamp']) &&
             data.userId is string && data.userId.size() > 0 &&
             data.latitude is number && data.latitude >= -90 && data.latitude <= 90 &&
             data.longitude is number && data.longitude >= -180 && data.longitude <= 180 &&
             data.timestamp is timestamp;
    }
  }
}